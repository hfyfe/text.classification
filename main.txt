C = .4 ;
cycles = 20 ; 
textcount = 160 ; 
samplecount = 120 ;
wordcount = 363;

Truth = zeros(textcount,1) ;
%remember, set this parameter manually depending on which set of texts
Truth(41:80) = 1 ;


testcount = textcount - samplecount ; 
weights = zeros (cycles, wordcount) ;
recall = zeros(cycles,1) ;
accuracy = zeros(cycles,1);
A = zeros(textcount,wordcount);

storylist = { %removed for brevity
      } ;
  
%derive count of each word in each text thru wordlist function
for j = 1:textcount
    A(j,1:wordcount) = wordlist(storylist{j}) ; 
end


for i = 1:cycles
    
    %sample + test matrices and indexes
    samplepermuatation = zeros(samplecount,1) ;
    testpermutation = zeros (testcount ,1) ; 
    sampleperm = zeros(samplecount,wordcount) ;
    testperm = zeros(testcount,wordcount) ;
 
    %randomly separate sample and test set
    AorderPermutation = randperm(textcount) ;
    for j = 1:samplecount ;
        n = AorderPermutation(j) ; 
        sampleperm (j,1:wordcount) = A(n,1:wordcount) ;
        samplepermuatation(j) = Truth(n) ; 
    end  
    for j = 1:testcount
        n = AorderPermutation(j+samplecount) ;
        testperm(j,1:wordcount) = A(n,1:wordcount) ; 
        testpermutation(j) = Truth(n) ; 
    end

    %call optim function to format + run linear program 
    weightvector = optim(sampleperm,samplepermuatation,C) ;
    
    %withdraw pertinent vector weightings and estimate classification for
    %test set
    weights(i, 1:wordcount ) = 100*weightvector(samplecount + wordcount+1: samplecount + 2*wordcount); 
    estimate = testperm*weights(i,1:wordcount )' ; 

    %calculate performance of estimate
    falsep = 0 ;
    truep = 0 ;
    falsen = 0 ;
    for j = 1:testcount
        if (estimate(j) > 0)
            if (testpermutation(j) == 1 );
                truep = truep + 1 ;
            else
               falsep = falsep + 1 ; 
            end
        end
        if (estimate(j) < 0 && testpermutation(j) == 1);
            falsen = falsen + 1;
        end
    end
    accuracy(i) = truep /(falsep + truep) ; 
    recall(i) = truep/ (falsen + truep) ;
end

%sum of perforamnce 
waverage = mean(weights,1)    
recallavg = mean(recall) 
accuracyavg = mean(accuracy)   
sum = recallave+accuracyavg




